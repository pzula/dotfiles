# improve colors
set -g default-terminal 'screen-256color'
 
# enable utf-8 on status bar
set -g status on
set -g status-utf8 on

# act like GNU screen
unbind C-b
set -g prefix C-a
 
# start window numbers at 1 to match keyboard order with tmux window order
 set -g base-index 1

# renumber windows sequentially after closing any of them
 set -g renumber-windows on

set-window-option -g pane-base-index 1

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
 
# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''
 
# remove auto-rename of windows
set-window-option -g automatic-rename off
 
# reload settings
bind-key R source-file ~/.tmux.conf \; display-message "Configuration reloaded!"
 
 
### Statusbar settings
# toggle statusbar
bind-key s set status
# use vi-style key bindings in the status line
set -g status-keys vi
# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000
 
# http://tjvanslyke.com/tmux-for-vim-users/
 
# change prefix to Control-a instead of Control-b (also, CTRL has been mapped to caps)
set -g prefix C-a
unbind C-b
 
# Next, I set the history limit to 100000 lines. This allows scrolling back as far as you'll ever need using Ctrl+A [.
set-option -g history-limit 100000
 
setw -g xterm-keys on
set-option -g default-terminal "screen-256color"
 
# ZSH as default shell
# set -g default-command /bin/zsh
# set -g default-shell /bin/zsh
 
# The default keybindings for splitting windows are poorly defined in the % key.
# To provide more memorable shortcuts, I've bound them to | and - for vertical and horizontal splits, respectively.
# This means you can press Ctrl+A | to split your current pane into two vertically, and Ctrl+A - to split it horizontally.
 
bind-key | split-window -h
bind-key - split-window
 
# One of my most commonly used Vim features is the Ctrl+W pane navigation commands.
# These allow easy navigation between all your visible editor panes.
# This behavior can be mimicked in tmux by binding the hjkl keys to the select-pane command:
 
unbind-key j
bind-key j select-pane -D
 
unbind-key k
bind-key k select-pane -U
 
unbind-key h
bind-key h select-pane -L
 
unbind-key l
bind-key l select-pane -R
 
# TMUX book from PragProg
 
# make keys more responsive
set -s escape-time 1
 
# window resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
 
# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr default
# default window title colors
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim
# active window title colors
setw -g window-status-current-fg '#268bd2'
setw -g window-status-current-bg '#222222'
#setw -g window-status-current-attr bright
setw -g window-status-current-attr underscore
# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# set thyme
# set-option -g status-right '#(cat ~/.thyme-tmux)'
# set-option -g status-interval 1

# set up powerline
# command /message line colors

source '/Library/Python/2.7/site-packages/powerline/bindings/tmux/powerline.conf'

set -g message-fg white
set -g message-bg black
set -g message-attr bright

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
#
#set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour254,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
#set -g window-status-format "#[fg=white,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
#set -g status-right "#(wemux status_users) #(cat ~/.thyme-tmux)"
set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`) #[fg=colour244,bg=colour232,nobold] #(cat ~/.thyme-tmux) '
set-option -g status-interval 1
#set -g status-right "#(cat ~/.thyme-tmux)"
#
# POWERLINE
#
#source '/Library/Python/2.7/site-packages/powerline/bindings/tmux/powerline.conf'
